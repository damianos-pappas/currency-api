// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using currencyApi.Data;

namespace currency_api.Migrations
{
    [DbContext(typeof(CurrenciesContext))]
    partial class CurrenciesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("currencyApi.Models.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nchar(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "EUR",
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 120, DateTimeKind.Utc).AddTicks(8768),
                            Description = "Euro",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2L,
                            Code = "USD",
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 120, DateTimeKind.Utc).AddTicks(8813),
                            Description = "US Dollar",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3L,
                            Code = "CHF",
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 120, DateTimeKind.Utc).AddTicks(8816),
                            Description = "Swiss Franc",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4L,
                            Code = "GBP",
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 120, DateTimeKind.Utc).AddTicks(8818),
                            Description = "British Pound",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5L,
                            Code = "JPY",
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 120, DateTimeKind.Utc).AddTicks(8819),
                            Description = "Japan Yen",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6L,
                            Code = "CAD",
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 120, DateTimeKind.Utc).AddTicks(8821),
                            Description = "Canadian Dollar",
                            IsActive = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("currencyApi.Models.CurrencyRate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BaseCurrencyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 10)");

                    b.Property<long>("TargetCurrencyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TargetCurrencyId");

                    b.HasIndex("BaseCurrencyId", "TargetCurrencyId")
                        .IsUnique();

                    b.ToTable("CurrencyRates");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BaseCurrencyId = 1L,
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 121, DateTimeKind.Utc).AddTicks(384),
                            IsActive = true,
                            IsDeleted = false,
                            Rate = 1.3764m,
                            TargetCurrencyId = 2L
                        },
                        new
                        {
                            Id = 2L,
                            BaseCurrencyId = 1L,
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 121, DateTimeKind.Utc).AddTicks(458),
                            IsActive = true,
                            IsDeleted = false,
                            Rate = 1.2079m,
                            TargetCurrencyId = 3L
                        },
                        new
                        {
                            Id = 3L,
                            BaseCurrencyId = 1L,
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 121, DateTimeKind.Utc).AddTicks(462),
                            IsActive = true,
                            IsDeleted = false,
                            Rate = 0.8731m,
                            TargetCurrencyId = 4L
                        },
                        new
                        {
                            Id = 4L,
                            BaseCurrencyId = 2L,
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 121, DateTimeKind.Utc).AddTicks(464),
                            IsActive = true,
                            IsDeleted = false,
                            Rate = 76.7200m,
                            TargetCurrencyId = 5L
                        },
                        new
                        {
                            Id = 5L,
                            BaseCurrencyId = 3L,
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 121, DateTimeKind.Utc).AddTicks(562),
                            IsActive = true,
                            IsDeleted = false,
                            Rate = 1.1379m,
                            TargetCurrencyId = 2L
                        },
                        new
                        {
                            Id = 6L,
                            BaseCurrencyId = 4L,
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 121, DateTimeKind.Utc).AddTicks(564),
                            IsActive = true,
                            IsDeleted = false,
                            Rate = 1.5648m,
                            TargetCurrencyId = 6L
                        });
                });

            modelBuilder.Entity("currencyApi.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 116, DateTimeKind.Utc).AddTicks(6770),
                            Email = "user@currencies.cur",
                            IsActive = true,
                            IsDeleted = false,
                            PasswordHash = "fGt1vKQUR082ue1S9ZKG5w==",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 119, DateTimeKind.Utc).AddTicks(915),
                            Email = "user@currencies.cur",
                            IsActive = true,
                            IsDeleted = false,
                            PasswordHash = "nsoIb8ZBL/MwmYsc7adypQ==",
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("currencyApi.Models.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique()
                        .HasFilter("[Description] IS NOT NULL");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "user"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "admin-currencies"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "admin-rates"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "admin-users"
                        });
                });

            modelBuilder.Entity("currencyApi.Models.UserRoleRelation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId", "RoleId")
                        .IsUnique();

                    b.ToTable("UserRoleRelations");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 120, DateTimeKind.Utc).AddTicks(7495),
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 120, DateTimeKind.Utc).AddTicks(7544),
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 1L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 120, DateTimeKind.Utc).AddTicks(7547),
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 2L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 120, DateTimeKind.Utc).AddTicks(7548),
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 3L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2020, 3, 29, 16, 58, 23, 120, DateTimeKind.Utc).AddTicks(7550),
                            IsActive = true,
                            IsDeleted = false,
                            RoleId = 4L,
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("currencyApi.Models.CurrencyRate", b =>
                {
                    b.HasOne("currencyApi.Models.Currency", "BaseCurrency")
                        .WithMany("CurrencyRates")
                        .HasForeignKey("BaseCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("currencyApi.Models.Currency", "TargetCurrency")
                        .WithMany()
                        .HasForeignKey("TargetCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("currencyApi.Models.UserRoleRelation", b =>
                {
                    b.HasOne("currencyApi.Models.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("currencyApi.Models.User", "User")
                        .WithMany("UserRoleRelations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
